{"version":3,"file":"static/js/440.e8152dcb.chunk.js","mappings":"oPAsBA,EAnBqB,SAAAA,GACnB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,8GAEMC,EAAAA,EAAAA,GAAUR,GAFhB,OAEdS,EAFc,OAGpBN,EAAQM,EAAYP,MAHA,gDAKpBG,EAAS,EAAD,IALY,yDAAH,qDAQrBE,GACD,GAAE,CAACP,IAEG,CAAEE,KAAAA,EAAME,MAAAA,EAChB,ECnBD,EAA8B,0BAA9B,EAAsE,0BAAtE,EAA8G,0BAA9G,EAA+I,mBAA/I,EAA6K,uB,kBC8C7K,EAtCa,WACX,IAAQJ,GAAYU,EAAAA,EAAAA,MAAZV,QACFW,EAAQC,EAAaZ,GACnBE,EAAgBS,EAAhBT,KAAME,EAAUO,EAAVP,MAMd,OAJIA,GACFS,EAAAA,GAAAA,QAAA,gCAAuCT,GAASU,EAAAA,IAIhD,gBAAIC,UAAWC,EAAf,WACE,SAAC,KAAD,IAECd,EAAKe,OAAS,GACbf,EAAKgB,KAAI,SAAAC,GAAK,OACZ,gBAAmBJ,UAAWC,EAA9B,WACE,gBACEI,IAAKD,EAAME,KACXC,IACEH,EAAMI,aAAN,0CACuCJ,EAAMI,c,0sNAG/CC,MAAM,MACNC,OAAO,SAET,iBAAKV,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,SAA6BG,EAAME,QACnC,eAAGN,UAAWC,EAAd,UAAwB,cAAYG,EAAMO,kBAbrCP,EAAMQ,GADH,IAmBC,IAAhBzB,EAAKe,SAAgB,uBAAG,0CAG9B,C","sources":["hooks/useFetchCast.js","webpack://movie-library/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { fetchCast } from 'services/api/api';\n\nconst useFetchCast = movieId => {\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const handleFetchCast = async () => {\n      try {\n        const fetchedCast = await fetchCast(movieId);\n        setCast(fetchedCast.cast);\n      } catch (err) {\n        setError(err);\n      }\n    };\n    handleFetchCast();\n  }, [movieId]);\n\n  return { cast, error };\n};\n\nexport default useFetchCast;\n","// extracted by mini-css-extract-plugin\nexport default {\"CastGallery\":\"Cast_CastGallery__lTshA\",\"GalleryItem\":\"Cast_GalleryItem__xX5BY\",\"GalleryText\":\"Cast_GalleryText__3moIr\",\"text\":\"Cast_text__P2vgu\",\"textBold\":\"Cast_textBold__p+vga\"};","import { ToastContainer, toast } from 'react-toastify';\nimport { toastConfig } from 'services/toastify/toastConfig';\nimport { useParams } from 'react-router-dom';\nimport placeholder from '../../images/profile.jpg';\nimport useFetchCast from 'hooks/useFetchCast';\n\nimport css from './Cast.module.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const state = useFetchCast(movieId);\n  const { cast, error } = state;\n\n  if (error) {\n    toast.warning(`Something went wrong. ${error}`, toastConfig);\n  }\n\n  return (\n    <ul className={css.CastGallery}>\n      <ToastContainer />\n\n      {cast.length > 0 &&\n        cast.map(actor => (\n          <li key={actor.id} className={css.GalleryItem}>\n            <img\n              alt={actor.name}\n              src={\n                actor.profile_path\n                  ? `https://image.tmdb.org/t/p/w200/${actor.profile_path}`\n                  : placeholder\n              }\n              width=\"200\"\n              height=\"300\"\n            />\n            <div className={css.GalleryText}>\n              <p className={css.textBold}>{actor.name}</p>\n              <p className={css.text}>Character: {actor.character}</p>\n            </div>\n          </li>\n        ))}\n\n      {cast.length === 0 && <p>There is no information on the cast</p>}\n    </ul>\n  );\n};\n\nexport default Cast;\n"],"names":["movieId","useState","cast","setCast","error","setError","useEffect","handleFetchCast","fetchCast","fetchedCast","useParams","state","useFetchCast","toast","toastConfig","className","css","length","map","actor","alt","name","src","profile_path","width","height","character","id"],"sourceRoot":""}