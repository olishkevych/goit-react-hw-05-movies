{"version":3,"file":"static/js/946.af03f6bb.chunk.js","mappings":"gLACA,EAA8B,+BAA9B,EAA2E,+BAA3E,EAAyH,gC,SCK5GA,EAAY,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KAC5CC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAAC,KAAD,CACEC,GAAE,kBAAaJ,GACfK,MAAO,CAAEC,KAAMJ,GACfK,UAAWC,EAHb,WAKE,gBACED,UAAWC,EACXC,IAAKX,EACLY,IAAKX,EAAM,0CAAsCA,GAAWY,EAC5DC,MAAM,SAER,iBAAKL,UAAWC,EAAhB,UACGV,EAAM,KAAGG,EAAK,SAItB,ECzBD,EAA+B,mCAA/B,EAAgF,kCCInEY,G,OAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC7B,OACE,eAAIP,UAAWC,EAAf,SACGM,EAAOC,KAAI,SAAAC,GAAK,OACf,eAAmBT,UAAWC,EAA9B,UACE,SAACX,EAAD,CACEC,MAAOkB,EAAMlB,MACbC,OAAQiB,EAAMC,YACdjB,QAASgB,EAAME,GACfjB,KAAMe,EAAMG,aAAaC,UAAU,EAAG,MALjCJ,EAAME,GADA,KAYtB,E,4HCnBD,EAA6B,+BAA7B,EAAwE,8BAAxE,EAAoH,gC,SCEvGG,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC3B,OACE,kBAAMC,SAAUD,EAAcf,UAAWC,EAAzC,WACE,kBACEgB,KAAK,OACLC,KAAK,aACLlB,UAAWC,EACXG,YAAY,oBACZe,WAAS,KAEX,mBAAQF,KAAK,SAASjB,UAAWC,EAAjC,SAAgD,aAKrD,E,6CCID,EAnBuB,SAAAmB,GACrB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAee,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,8GAEMC,EAAAA,EAAAA,IAAYP,GAFlB,OAEhBQ,EAFgB,OAGtBN,EAAUM,GAHY,gDAKtBJ,EAAS,EAAD,IALc,yDAAH,qDAQvBE,GACD,GAAE,CAACN,IAEG,CAAEb,OAAAA,EAAQgB,MAAAA,EAClB,ECnBD,EAA0B,wBC+C1B,EAnCe,WACb,OAAwCM,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMX,EAAQU,EAAaE,IAAI,SACzBJ,EAAgBK,EAAeb,GAC7Bb,EAAkBqB,EAAlBrB,OAAQgB,EAAUK,EAAVL,MAoBhB,OAJIA,GACFW,EAAAA,GAAAA,QAAc,CAAEX,MAAAA,KAIhB,4BACE,SAAC,KAAD,KACA,SAACT,EAAD,CAAYC,aArBK,SAAAoB,GACnBA,EAAMC,iBACN,IAAMC,EAAcF,EAAMG,OAAOC,SAASC,WAAWC,MACrD,GAAIJ,EAAa,CACfF,EAAMG,OAAOI,QACb,IAAMF,EAAaH,EAAYM,cAC/BZ,EAAgB,CACdX,MAAOoB,GAEV,MACCN,EAAAA,GAAAA,MAAY,oBAAqBU,EAAAA,EAEpC,IAUIrC,EAAOsC,OAAS,IAAK,SAACvC,EAAA,EAAD,CAAcC,OAAQA,IACzB,IAAlBA,EAAOsC,QAAgBzB,IACtB,gBAAKpB,UAAWC,EAAhB,SAA6B,8BAIpC,C","sources":["webpack://movie-library/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","webpack://movie-library/./src/components/MovieGallery/MovieGallery.module.css?cb9b","components/MovieGallery/MovieGallery.jsx","webpack://movie-library/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","hooks/useFetchMovies.js","webpack://movie-library/./src/pages/Movies.module.css?d157","pages/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"GalleryText\":\"MovieCard_GalleryText__8uG-9\",\"GalleryLink\":\"MovieCard_GalleryLink__dE8qG\",\"GalleryImage\":\"MovieCard_GalleryImage__dJkpO\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport placeholder from '../../images/poster-placeholder.jpg';\nimport css from './MovieCard.module.css';\n\nexport const MovieCard = ({ title, poster, movieId, year }) => {\n  const location = useLocation();\n\n  return (\n    <Link\n      to={`/movies/${movieId}`}\n      state={{ from: location }}\n      className={css.GalleryLink}\n    >\n      <img\n        className={css.GalleryImage}\n        alt={title}\n        src={poster ? `https://image.tmdb.org/t/p/w200/${poster}` : placeholder}\n        width=\"200\"\n      />\n      <div className={css.GalleryText}>\n        {title} ({year})\n      </div>\n    </Link>\n  );\n};\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string,\n  movieId: PropTypes.number.isRequired,\n  year: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"MovieGallery\":\"MovieGallery_MovieGallery__MEPTo\",\"GalleryItem\":\"MovieGallery_GalleryItem__z98+3\"};","import { MovieCard } from 'components/MovieCard/MovieCard';\nimport PropTypes from 'prop-types';\nimport css from './MovieGallery.module.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const MovieGallery = ({ movies }) => {\n  return (\n    <ul className={css.MovieGallery}>\n      {movies.map(movie => (\n        <li key={movie.id} className={css.GalleryItem}>\n          <MovieCard\n            title={movie.title}\n            poster={movie.poster_path}\n            movieId={movie.id}\n            year={movie.release_date.substring(0, 4)}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieGallery.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"SearchForm\":\"SearchForm_SearchForm__jbIQn\",\"SearchBtn\":\"SearchForm_SearchBtn__UCO+o\",\"SearchInput\":\"SearchForm_SearchInput__m8E3o\"};","import css from './SearchForm.module.css';\nimport PropTypes from 'prop-types';\n\nexport const SearchForm = ({ handleSubmit }) => {\n  return (\n    <form onSubmit={handleSubmit} className={css.SearchForm}>\n      <input\n        type=\"text\"\n        name=\"searchText\"\n        className={css.SearchInput}\n        placeholder=\"Enter search text\"\n        autoFocus\n      />\n      <button type=\"submit\" className={css.SearchBtn}>\n        Search\n      </button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { fetchMovies } from 'services/api/api';\n\nconst useFetchMovies = query => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const handleFetchMovies = async () => {\n      try {\n        const fetchedMovies = await fetchMovies(query);\n        setMovies(fetchedMovies);\n      } catch (err) {\n        setError(err);\n      }\n    };\n    handleFetchMovies();\n  }, [query]);\n\n  return { movies, error };\n};\n\nexport default useFetchMovies;\n","// extracted by mini-css-extract-plugin\nexport default {\"Warning\":\"Movies_Warning__3e0np\"};","import 'react-toastify/dist/ReactToastify.css';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport { toastConfig } from 'services/toastify/toastConfig';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { MovieGallery } from 'components/MovieGallery/MovieGallery';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport useFetchMovies from 'hooks/useFetchMovies';\n\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const fetchedMovies = useFetchMovies(query);\n  const { movies, error } = fetchedMovies;\n\n  const handleSumbit = event => {\n    event.preventDefault();\n    const searchQuery = event.target.children.searchText.value;\n    if (searchQuery) {\n      event.target.reset();\n      const searchText = searchQuery.toLowerCase();\n      setSearchParams({\n        query: searchText,\n      });\n    } else {\n      toast.error('Enter search text', toastConfig);\n    }\n  };\n\n  if (error) {\n    toast.warning({ error });\n  }\n\n  return (\n    <div>\n      <ToastContainer />\n      <SearchForm handleSubmit={handleSumbit} />\n      {movies.length > 0 && <MovieGallery movies={movies} />}\n      {movies.length === 0 && query && (\n        <div className={css.Warning}>Ooops! No movies found!</div>\n      )}\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["MovieCard","title","poster","movieId","year","location","useLocation","to","state","from","className","css","alt","src","placeholder","width","MovieGallery","movies","map","movie","poster_path","id","release_date","substring","SearchForm","handleSubmit","onSubmit","type","name","autoFocus","query","useState","setMovies","error","setError","useEffect","handleFetchMovies","fetchMovies","fetchedMovies","useSearchParams","searchParams","setSearchParams","get","useFetchMovies","toast","event","preventDefault","searchQuery","target","children","searchText","value","reset","toLowerCase","toastConfig","length"],"sourceRoot":""}